gather(-c("Organization", "Metric"), key = "Date", value = "Amount") %>%
filter(Metric != "FEMS") %>%
spread(key = Metric, value = Amount) %>%
mutate(Organization = str_replace_all(Organization, " ", "-")) %>%
rename_all(funs(str_replace_all(., " ", ".")))
dcCovid19DataSummaryDCOrgsToday <- dcCovid19DataSummaryDCOrgsToday %>%
filter_all(any_vars(!is.na(.))) %>%
filter(!is.na(Organization)) %>%
gather(-c("Organization", "Metric"), key = "Date", value = "Amount") %>%
filter(Metric != "FEMS") %>%
spread(key = Metric, value = Amount) %>%
mutate(Organization = str_replace_all(Organization, " ", "-")) %>%
rename_all(funs(str_replace_all(., " ", ".")))
View(dcCovid19DataSummaryDCOrgsToday)
dcCovid19DataSummaryDCOrgsToday
write_csv(dcCovid19DataSummaryDCOrgsToday, "dcCovid19DataSummaryDCOrgs.csv")
Virginia_Totals_Today <- read_csv("VirginiaTotals.csv") %>% filter(Date == max(Date))
Virginia_By_County_Today <- read_csv("Virginia_By_County_Today.csv") %>%
rename(County = Locality, Date = `Report Date`, Cases = `Total Cases`) %>%
mutate(State = "Virginia") %>%
mutate(Date = mdy(Date)) %>%
left_join(stateConversions, by = c("State" = "Full_Name")) %>%
dplyr::select(County, Cases, Date, State, Abbr, FIPS)
MD_By_County <- read_csv("MD_By_County.csv")
MD_Summary_Today <- read_csv("MD_Summary.csv") %>% filter(Date == max(Date))
WV_CountiesDFCleaned <- read_csv("WV_Counties.csv") %>% filter(Date == max(Date))
Virginia_By_County <- read_csv("Virginia_By_County.csv")
Virginia <- Virginia_Totals_Today[c(1, 2, 4)]
Virginia$Cases <- sum(Virginia_By_County$Cases)
Virginia$State <- "Virginia"
Virginia <- Virginia %>%
select(State, Cases, Deaths, Tests, Date)
Virginia
tibble(State = "Maryland",
Cases = sum(MD_By_County$Cases),
Deaths = MD_Summary_Today$Deaths,
Tests = MD_Summary_Today$Tests, # This is fixed now: sum(MD_Summary_Today$Tests, sum(MD_By_County_Today$Cases)), # Fix this earlier by swaping the MD_Cases_By_County before the MD_Summary and replace the old test number with the test number plus the total cases for all counties.
Date = Sys.Date() - 1)
Maryland <- tibble(State = "Maryland",
Cases = sum(MD_By_County$Cases),
Deaths = MD_Summary_Today$Deaths,
Tests = MD_Summary_Today$Tests, # This is fixed now: sum(MD_Summary_Today$Tests, sum(MD_By_County_Today$Cases)), # Fix this earlier by swaping the MD_Cases_By_County before the MD_Summary and replace the old test number with the test number plus the total cases for all counties.
Date = Sys.Date() - 1)
virginiaCounties <- Virginia_By_County_Today %>%
filter(County %in% c("Alexandria", "Arlington", "Fairfax", "Loudoun", "Prince William", "Culpeper")) %>%
mutate(Deaths = NA) %>%
mutate(Tests = NA) %>%
select(County, Cases, Deaths, Tests, Date)
MD_By_County_Today <- MD_By_County %>% filter(Date == max(Date))
marylandCounties <- MD_By_County_Today %>%
filter(County %in% c("Montgomery", "Prince Georges", "Frederick", "Calvert")) %>%
mutate(Deaths = NA) %>%
mutate(Tests = NA) %>%
select(County, Cases, Deaths, Tests, Date)
marylandCounties
bind_rows(dcSummary, Maryland, marylandCounties, Virginia, virginiaCounties) %>%
select(State, County, Cases, Deaths, Tests, Date)
MD_By_County$Cases
sum(MD_By_County$Cases)
dailySummaryToday
dailySummaryToday <- bind_rows(dcSummary, Maryland, marylandCounties, Virginia, virginiaCounties) %>%
select(State, County, Cases, Deaths, Tests, Date)
dailySummary <- read_csv("covidSummaryDCist.csv")
bind_rows(dailySummaryToday, dailySummary)
dailySummary <- bind_rows(dailySummaryToday, dailySummary)
write_csv(dailySummary, "covidSummaryDCist.csv")
Full_States <- read_csv("FullStates.csv")
bind_rows(Full_States, Virginia_By_County, MD_By_County, WV_CountiesDFCleaned, DC_By_County) %>%
arrange(desc(Date))
Full_States <- bind_rows(Full_States, Virginia_By_County, MD_By_County, WV_CountiesDFCleaned, DC_By_County) %>%
arrange(desc(Date))
Full_States <- Full_States %>%
mutate(County = unlist(lapply(County, str_remove_all, "'"))) %>%
mutate(County = unlist(lapply(County, str_remove_all, "/."))) %>%
mutate(County = case_when(County %in% c("Alexandria", "Harrisonburg", "Chesapeake", "Newport News", "Williamsburg", "Portsmouth", "Charlottesville", "Virginia Beach", "Suffolk", "Norfolk") ~ paste(County, "City", sep = " "),
County %in% c("Franklin County", "Baltimore County") ~ str_remove(County, ".County"),
str_detect(County, "Chesterf.*")  ~ "Chesterfield",
str_detect(County, 'Sta..ord') ~ "Stafford",
str_detect(County, 'Su..olk') ~ "Suffolk City",
str_detect(County, ".*Marys") ~ "St Marys",
T ~ County)) #%>%
# left_join(stateConversions, by = c("State" = "Full_Name")) %>%
# left_join(countyStateFIPS, by = c("Abbr" = "State", "County" = "Name"))
Full_States %>%
distinct()
Full_States %>%
distinct() %>%
write_csv("FullStates.csv")
Full_States <- Full_States %>% distinct()
DMV_Counties <- c("District of Columbia",
"Calvert", "Charles", "Frederick", "Montgomery", "Prince Georges",
"Alexandria", "Arlington", "Clarke", "Culpeper", "Fairfax", "Farquier", "Fredericksburg", "Loudoun", "Manassas", "Prince William", "Rappahannock", "Spotsylvania", "Stafford", "Warren",
"Jefferson")
DMV_FIPS <- c("11001", "24009", "24017", "24021", "24031", "24033", "51510", "51013", "51043", "51047", "51059", "51061", "51630", "51107", "51683", "51153", "51157", "51177", "51179", "51187", "54037", "51600", "51610", "516815")
DMV_Closer_FIPS <- c("24031", "24033", "24021", "24009", "51510", "51013", "51059", "51600", "51107", "51153", "51047", "11001")
Full_States %>%
mutate(FIPS = as.character(FIPS)) %>%
filter(FIPS %in% DMV_FIPS)
DMV_Counties_Covid_Cases <- Full_States %>%
mutate(FIPS = as.character(FIPS)) %>%
filter(FIPS %in% DMV_FIPS)
write_csv(DMV_Counties_Covid_Cases, "DMVCountiesCovidCases.csv")
covid19Theme <- function() {
theme_classic() +
theme(text = element_text(family = "Georgia", color = "gray25"),
plot.title = element_text(size = 24, face = "bold"),
plot.subtitle = element_text(size = 16),
plot.caption = element_text(color = "gray30", size = 12),
legend.position = "right",
legend.text = element_text(color = "gray30", size = 14, face = "bold"),
legend.title = element_text(color = "gray30", size = 16, face = "bold"),
axis.text = element_text(color = "gray25", size = 14)
)
}
ggplotCaption <- "Data from: DC Mayor's Office, MD Dept of Health, VA Dept of Health"
DMV_Counties_Covid_Cases %>%
filter(Date >= as.Date("2020-03-23")) %>%
filter(FIPS %in% DMV_Closer_FIPS) %>%
ggplot(aes(x = Date, y = Cases)) +
geom_line(aes(color = County), size = 3) +
geom_point(aes(shape = State, color = County), size = 6) +
scale_y_continuous(trans = 'log2', breaks = trans_breaks("log2", function(x) 2^x)) +
covid19Theme() +
scale_color_brewer(palette = "Paired") +
labs(title = "DMV Covid-19 cases by county", subtitle = "Over time", caption = ggplotCaption) + xlab("") + ylab("")
dmvCasesByCountyLine <- DMV_Counties_Covid_Cases %>%
filter(Date >= as.Date("2020-03-23")) %>%
filter(FIPS %in% DMV_Closer_FIPS) %>%
ggplot(aes(x = Date, y = Cases)) +
geom_line(aes(color = County), size = 3) +
geom_point(aes(shape = State, color = County), size = 6) +
scale_y_continuous(trans = 'log2', breaks = trans_breaks("log2", function(x) 2^x)) +
covid19Theme() +
scale_color_brewer(palette = "Paired") +
labs(title = "DMV Covid-19 cases by county", subtitle = "Over time", caption = ggplotCaption) + xlab("") + ylab("")
ggsave(filename = "/home/adrian/Documents/Personal_Portfolio_Site/DMV_Covid-19/dmvCasesByCountyLine.png", plot = dmvCasesByCountyLine, width = 300, height = 250, units = 'mm')
DMV_Counties_Covid_Cases %>%
left_join(stateCountyPops, by = "FIPS") %>%
filter(Date >= as.Date("2020-03-23")) %>%
filter(FIPS %in% DMV_Closer_FIPS) %>%
ggplot(aes(x = Date, y = (Cases / TOTAL_POP_100K))) +
geom_line(aes(color = County), size = 3) +
geom_point(aes(shape = State, color = County), size = 6) +
scale_y_continuous(trans = 'log2', breaks = trans_breaks("log2", function(x) 2^x)) +
covid19Theme() +
scale_color_brewer(palette = "Paired") +
labs(title = "DMV Covid-19 case rate per capita by county", subtitle = "Over time, per 100k residents", caption = ggplotCaption) + xlab("") + ylab("")
dmvCasesByCountyLinePerCap <- DMV_Counties_Covid_Cases %>%
left_join(stateCountyPops, by = "FIPS") %>%
filter(Date >= as.Date("2020-03-23")) %>%
filter(FIPS %in% DMV_Closer_FIPS) %>%
ggplot(aes(x = Date, y = (Cases / TOTAL_POP_100K))) +
geom_line(aes(color = County), size = 3) +
geom_point(aes(shape = State, color = County), size = 6) +
scale_y_continuous(trans = 'log2', breaks = trans_breaks("log2", function(x) 2^x)) +
covid19Theme() +
scale_color_brewer(palette = "Paired") +
labs(title = "DMV Covid-19 case rate per capita by county", subtitle = "Over time, per 100k residents", caption = ggplotCaption) + xlab("") + ylab("")
ggsave(filename = "/home/adrian/Documents/Personal_Portfolio_Site/DMV_Covid-19/dmvCasesByCountyLinePerCap.png", plot = dmvCasesByCountyLinePerCap, width = 300, height = 250, units = 'mm')
DMV_Counties_Covid_Cases %>%
filter(Date == max(Date)) %>%
filter(FIPS %in% DMV_Closer_FIPS) %>%
ggplot(aes(x = State, y = Cases, fill = reorder(County, -Cases))) +
geom_col(position = "dodge") +
geom_text(aes(label = Cases), vjust = -0.2, size = 5, position = position_dodge2(width = 0.9, reverse = F)) +
covid19Theme() +
scale_fill_brewer(palette = "Paired") +
labs(title = "DMV Covid-19 cases by county", subtitle = paste("On", Sys.Date() - 1, sep = " "), caption = ggplotCaption) + xlab("") + ylab("") +
guides(fill=guide_legend(title="County"))
dmvCasesByCountyBar <- DMV_Counties_Covid_Cases %>%
filter(Date == max(Date)) %>%
filter(FIPS %in% DMV_Closer_FIPS) %>%
ggplot(aes(x = State, y = Cases, fill = reorder(County, -Cases))) +
geom_col(position = "dodge") +
geom_text(aes(label = Cases), vjust = -0.2, size = 5, position = position_dodge2(width = 0.9, reverse = F)) +
covid19Theme() +
scale_fill_brewer(palette = "Paired") +
labs(title = "DMV Covid-19 cases by county", subtitle = paste("On", Sys.Date() - 1, sep = " "), caption = ggplotCaption) + xlab("") + ylab("") +
guides(fill=guide_legend(title="County"))
ggsave(filename = "/home/adrian/Documents/Personal_Portfolio_Site/DMV_Covid-19/dmvCasesByCountyBar.png", plot = dmvCasesByCountyBar, width = 300, height = 275, units = 'mm')
DMV_Counties_Covid_Cases %>%
left_join(stateCountyPops, by = "FIPS") %>%
filter(Date == max(Date)) %>%
filter(FIPS %in% DMV_Closer_FIPS) %>%
ggplot(aes(x = State, y = round((Cases / TOTAL_POP_100K), 1), fill = reorder(County, -round((Cases / TOTAL_POP_100K), 1)))) +
geom_col(position = "dodge") +
geom_text(aes(label = round((Cases / TOTAL_POP_100K), 0)), vjust = -0.2, size = 7, position = position_dodge2(width = 0.9, reverse = F)) +
covid19Theme() +
scale_fill_brewer(palette = "Paired") +
labs(title = "DMV Covid-19 case rate by county per capita", subtitle = paste("On", paste0(Sys.Date() - 1, ","), "per 100k residents", sep = " "), caption = ggplotCaption) + xlab("") + ylab("") +
guides(fill=guide_legend(title="County"))
dmvCasesByCountyBarPerCap <- DMV_Counties_Covid_Cases %>%
left_join(stateCountyPops, by = "FIPS") %>%
filter(Date == max(Date)) %>%
filter(FIPS %in% DMV_Closer_FIPS) %>%
ggplot(aes(x = State, y = round((Cases / TOTAL_POP_100K), 1), fill = reorder(County, -round((Cases / TOTAL_POP_100K), 1)))) +
geom_col(position = "dodge") +
geom_text(aes(label = round((Cases / TOTAL_POP_100K), 0)), vjust = -0.2, size = 7, position = position_dodge2(width = 0.9, reverse = F)) +
covid19Theme() +
scale_fill_brewer(palette = "Paired") +
labs(title = "DMV Covid-19 case rate by county per capita", subtitle = paste("On", paste0(Sys.Date() - 1, ","), "per 100k residents", sep = " "), caption = ggplotCaption) + xlab("") + ylab("") +
guides(fill=guide_legend(title="County"))
ggsave(filename = "/home/adrian/Documents/Personal_Portfolio_Site/DMV_Covid-19/dmvCasesByCountyBarPerCap.png", plot = dmvCasesByCountyBarPerCap, width = 300, height = 275, units = 'mm')
dailySummary %>%
drop_na(Tests) %>%
ggplot(aes(x = Date, y = Tests)) +
geom_line(aes(color = State), na.rm = T, size = 3) +
geom_point(aes(shape = State, color = State), size = 6) +
scale_y_continuous(breaks = seq(0, (max(dailySummary$Tests, na.rm = T) + 1000), by = 1000)) +
scale_color_manual(values = c("#E91436", "#ebab00ff", "#00257C")) +
covid19Theme() +
labs(title = "DMV Covid-19 tests", subtitle = "Over time", caption = ggplotCaption) + xlab("") + ylab("")
dailySummary
dailySummary %>% filter(State == "District of Columbia" & Date == as.Date("2020-03-31"))
#
# ### Line chart of all people tested by state
# ### Bar Chart of most recent totals
#
dailySummary %>% filter(State == "District of Columbia" & Date == as.Date("2020-04-01"))
#
# ### Line chart of all people tested by state
# ### Bar Chart of most recent totals
#
dailySummary %>% filter(State == "District of Columbia" & Date == as.Date("2020-04-02"))
#
# ### Line chart of all people tested by state
# ### Bar Chart of most recent totals
#
dailySummary %>% filter(State == "District of Columbia" & Date == as.Date("2020-03-31"))
#
# ### Line chart of all people tested by state
# ### Bar Chart of most recent totals
#
dailySummary %>% filter(State == "District of Columbia" & Date == as.Date("2020-03-30"))
dailySummary[dailySummary[State == "District of Columbia" & Date == as.Date("2020-03-31")],]
dailySummary[State == "District of Columbia" & Date == as.Date("2020-03-31"),]
dailySummary
dailySummary[(State == "District of Columbia" & Date == as.Date("2020-03-31")),]
dailySummary[dailySummary$State == "District of Columbia" & dailySummary$Date == as.Date("2020-03-31"),]
dailySummary[dailySummary$State == "District of Columbia" & dailySummary$Date == as.Date("2020-03-31"),]$Tests
c(4398, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA)
dailySummary[dailySummary$State == "District of Columbia" & dailySummary$Date == as.Date("2020-03-31"),]$Tests <- c(4398, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA)
dailySummary[dailySummary$State == "District of Columbia" & dailySummary$Date == as.Date("2020-03-31"),]$Tests
dailySummary[dailySummary$State == "District of Columbia" & dailySummary$Date == as.Date("2020-03-31"),]$Tests <- 4398
dailySummary <- read_csv("covidSummaryDCist.csv")
dailySummary %>%
drop_na(Tests) %>%
ggplot(aes(x = Date, y = Tests)) +
geom_line(aes(color = State), na.rm = T, size = 3) +
geom_point(aes(shape = State, color = State), size = 6) +
scale_y_continuous(breaks = seq(0, (max(dailySummary$Tests, na.rm = T) + 1000), by = 1000)) +
scale_color_manual(values = c("#E91436", "#ebab00ff", "#00257C")) +
covid19Theme() +
labs(title = "DMV Covid-19 tests", subtitle = "Over time", caption = ggplotCaption) + xlab("") + ylab("")
DMVTestsLine <- dailySummary %>%
drop_na(Tests) %>%
ggplot(aes(x = Date, y = Tests)) +
geom_line(aes(color = State), na.rm = T, size = 3) +
geom_point(aes(shape = State, color = State), size = 6) +
scale_y_continuous(breaks = seq(0, (max(dailySummary$Tests, na.rm = T) + 1000), by = 1000)) +
scale_color_manual(values = c("#E91436", "#ebab00ff", "#00257C")) +
covid19Theme() +
labs(title = "DMV Covid-19 tests", subtitle = "Over time", caption = ggplotCaption) + xlab("") + ylab("")
ggsave(filename = "/home/adrian/Documents/Personal_Portfolio_Site/DMV_Covid-19/DMVTestsLine.png", plot = DMVTestsLine, width = 300, height = 275, units = 'mm')
dailySummary %>%
drop_na(Tests) %>%
left_join(stateCountyPops, by = c("State" = "STNAME")) %>%
filter(SUMLEV == "040") %>%
ggplot(aes(x = Date, y = (Tests / TOTAL_POP_100K))) +
geom_line(aes(color = State), na.rm = T, size = 3) +
geom_point(aes(shape = State, color = State), size = 6) +
scale_y_continuous(breaks = seq(0, max(dailySummary$Tests, na.rm = T), by = 100)) +
scale_color_manual(values = c("#E91436", "#ebab00ff", "#00257C")) +
covid19Theme() +
labs(title = "DMV Covid-19 test rate", subtitle = "Over time, per 100k residents", caption = ggplotCaption) + xlab("") + ylab("")
DMVTestsLinePerCap <- dailySummary %>%
drop_na(Tests) %>%
left_join(stateCountyPops, by = c("State" = "STNAME")) %>%
filter(SUMLEV == "040") %>%
ggplot(aes(x = Date, y = (Tests / TOTAL_POP_100K))) +
geom_line(aes(color = State), na.rm = T, size = 3) +
geom_point(aes(shape = State, color = State), size = 6) +
scale_y_continuous(breaks = seq(0, max(dailySummary$Tests, na.rm = T), by = 100)) +
scale_color_manual(values = c("#E91436", "#ebab00ff", "#00257C")) +
covid19Theme() +
labs(title = "DMV Covid-19 test rate", subtitle = "Over time, per 100k residents", caption = ggplotCaption) + xlab("") + ylab("")
ggsave(filename = "/home/adrian/Documents/Personal_Portfolio_Site/DMV_Covid-19/DMVTestsLinePerCap.png", plot = DMVTestsLinePerCap, width = 300, height = 275, units = 'mm')
dailySummary %>%
drop_na(Tests) %>%
filter(Date == max(Date)) %>%
ggplot(aes(x = State, y = Tests)) +
geom_col(aes(fill = State), na.rm = T) +
geom_text(aes(label = Tests), vjust = -0.2, size = 8) +
scale_fill_manual(values = c("#E91436", "#ebab00ff", "#00257C")) +
covid19Theme() +
labs(title = "DMV Covid-19 tests", subtitle = paste("On", Sys.Date() - 1, sep = " "), caption = ggplotCaption) + xlab("") + ylab("")
DMVTestsBar <- dailySummary %>%
drop_na(Tests) %>%
filter(Date == max(Date)) %>%
ggplot(aes(x = State, y = Tests)) +
geom_col(aes(fill = State), na.rm = T) +
geom_text(aes(label = Tests), vjust = -0.2, size = 8) +
scale_fill_manual(values = c("#E91436", "#ebab00ff", "#00257C")) +
covid19Theme() +
labs(title = "DMV Covid-19 tests", subtitle = paste("On", Sys.Date() - 1, sep = " "), caption = ggplotCaption) + xlab("") + ylab("")
ggsave(filename = "/home/adrian/Documents/Personal_Portfolio_Site/DMV_Covid-19/DMVTestsBar.png", plot = DMVTestsBar, width = 300, height = 275, units = 'mm')
dailySummary %>%
drop_na(Tests) %>%
filter(Date == max(Date)) %>%
left_join(stateCountyPops, by = c("State" = "STNAME")) %>%
filter(SUMLEV == "040") %>%
ggplot(aes(x = State, y = round((Tests / TOTAL_POP_100K), 1)))  +
geom_col(aes(fill = State), na.rm = T) +
geom_text(aes(label = round((Tests / TOTAL_POP_100K), 1)), vjust = -0.2, size = 8) +
scale_fill_manual(values = c("#E91436", "#ebab00ff", "#00257C")) +
covid19Theme() +
labs(title = "DMV Covid-19 test rate", subtitle = paste("On", paste0(Sys.Date() - 1, ","), "per 100k residents", sep = " "), caption = ggplotCaption) + xlab("") + ylab("")
DMVTestsBarPerCap <- dailySummary %>%
drop_na(Tests) %>%
filter(Date == max(Date)) %>%
left_join(stateCountyPops, by = c("State" = "STNAME")) %>%
filter(SUMLEV == "040") %>%
ggplot(aes(x = State, y = round((Tests / TOTAL_POP_100K), 1)))  +
geom_col(aes(fill = State), na.rm = T) +
geom_text(aes(label = round((Tests / TOTAL_POP_100K), 1)), vjust = -0.2, size = 8) +
scale_fill_manual(values = c("#E91436", "#ebab00ff", "#00257C")) +
covid19Theme() +
labs(title = "DMV Covid-19 test rate", subtitle = paste("On", paste0(Sys.Date() - 1, ","), "per 100k residents", sep = " "), caption = ggplotCaption) + xlab("") + ylab("")
ggsave(filename = "/home/adrian/Documents/Personal_Portfolio_Site/DMV_Covid-19/DMVTestsBarPerCap.png", plot = DMVTestsBarPerCap, width = 300, height = 275, units = 'mm')
dailySummary %>%
drop_na(State) %>%
ggplot(aes(x = Date, y = Deaths)) +
geom_line(aes(color = State), na.rm = T, size = 3) +
geom_point(aes(color = State, shape = State), na.rm = T, size = 6) +
scale_color_manual(values = c("#E91436", "#EBAB00", "#00257C")) +
scale_y_continuous(breaks = seq(min(dailySummary$Deaths, na.rm = T), max(dailySummary$Deaths, na.rm = T), by = 2)) +
covid19Theme() +
labs(title = "DMV Covid-19 deaths", subtitle = "Over time", caption = ggplotCaption) + xlab("") + ylab("")
dcmdvaDeathsLine <- dailySummary %>%
drop_na(State) %>%
ggplot(aes(x = Date, y = Deaths)) +
geom_line(aes(color = State), na.rm = T, size = 3) +
geom_point(aes(color = State, shape = State), na.rm = T, size = 6) +
scale_color_manual(values = c("#E91436", "#EBAB00", "#00257C")) +
scale_y_continuous(breaks = seq(min(dailySummary$Deaths, na.rm = T), max(dailySummary$Deaths, na.rm = T), by = 2)) +
covid19Theme() +
labs(title = "DMV Covid-19 deaths", subtitle = "Over time", caption = ggplotCaption) + xlab("") + ylab("")
ggsave(filename = "/home/adrian/Documents/Personal_Portfolio_Site/DMV_Covid-19/dcmdvaDeathsLine.png", plot = dcmdvaDeathsLine, width = 300, height = 275, units = 'mm')
dailySummary %>%
drop_na(State) %>%
filter(Date == max(Date)) %>%
ggplot(aes(x = State, y = Deaths)) +
geom_col(aes(fill = State), na.rm = T) +
geom_text(aes(label = Deaths), vjust = -0.2, size = 8) +
scale_fill_manual(values = c("#E91436", "#EBAB00", "#00257C")) +
covid19Theme() +
labs(title = "DMV Covid-19 deaths", subtitle = paste("On", Sys.Date() - 1, sep = " "), caption = ggplotCaption) + xlab("") + ylab("")
ggsave(filename = "/home/adrian/Documents/Personal_Portfolio_Site/DMV_Covid-19/dcmdvaDeathsBar.png", plot = dcmdvaDeathsBar, width = 300, height = 275, units = 'mm')
dcmdvaDeathsBar <- dailySummary %>%
drop_na(State) %>%
filter(Date == max(Date)) %>%
ggplot(aes(x = State, y = Deaths)) +
geom_col(aes(fill = State), na.rm = T) +
geom_text(aes(label = Deaths), vjust = -0.2, size = 8) +
scale_fill_manual(values = c("#E91436", "#EBAB00", "#00257C")) +
covid19Theme() +
labs(title = "DMV Covid-19 deaths", subtitle = paste("On", Sys.Date() - 1, sep = " "), caption = ggplotCaption) + xlab("") + ylab("")
ggsave(filename = "/home/adrian/Documents/Personal_Portfolio_Site/DMV_Covid-19/dcmdvaDeathsBar.png", plot = dcmdvaDeathsBar, width = 300, height = 275, units = 'mm')
counties <- st_read("tl_2019_us_county.shp")
DMV <- counties %>%
mutate(GEOID = as.character(GEOID), NAME = as.character(NAME)) %>%
filter(GEOID %in% DMV_FIPS) %>%
left_join(stateCountyPops, by = c("GEOID" = "FIPS"))
DMV[DMV$GEOID == "51600",]$NAME <- "Fairfax City"
# plot(st_geometry(DMV))
DMV_Counties_Covid_Cases_Today <- DMV_Counties_Covid_Cases %>%
filter(Date == max(Date))
DMV_Cases <- DMV %>%
left_join(DMV_Counties_Covid_Cases_Today, by = c("GEOID" = "FIPS"))
DMV_Cases <- DMV_Cases %>%
mutate(Cases = if_else(is.na(Cases), 0, Cases))
st_crs(DMV_Cases) <- "+proj=longlat +datum=WGS84"
myBinsReg <- round(seq(from = 0, to = (max(DMV_Cases$Cases) + 1), by = (max(DMV_Cases$Cases) / 6)), 0)
myBinsPerCap <- round(seq(from = 0,
to = (max(DMV_Cases$Cases / DMV_Cases$TOTAL_POP_100K) + 1),
by = max(DMV_Cases$Cases / DMV_Cases$TOTAL_POP_100K) / 6), 0)
dmvPaletteReg <- colorBin(palette = "YlOrRd", domain = DMV_Cases$Cases, na.color = "transparent", bins = myBinsReg)
dmvPalettePerCap <- colorBin(palette = "YlOrRd", domain = DMV_Cases$Cases, na.color = "transparent", bins = myBinsPerCap)
legendText <- paste0(
"County: ", DMV_Cases$NAME, "<br/>",
"State: ", DMV_Cases$State, "<br/>",
"Cases: ", DMV_Cases$Cases, "<br/>"
) %>%
lapply(htmltools::HTML)
attribution <- htmltools::HTML("Map data &copy; <a href='https://www.openstreetmap.org/'>OpenStreetMap</a> contributors, <a href='https://creativecommons.org/licenses/by-sa/2.0/'>CC-BY-SA</a><br/>Data from: <a href = 'https://dhhr.wv.gov/COVID-19/Pages/default.aspx'>WV DHHR</a>, <a href='https://coronavirus.dc.gov/page/coronavirus-data'>DC Mayor's Office</a>, <a href='https://coronavirus.maryland.gov/'>MD Dept of Health</a>, <a href='http://www.vdh.virginia.gov/coronavirus/'>VA Dept of Health</a>")
leaflet(DMV_Cases) %>%
addTiles(attribution = attribution) %>%
setView(lat = "38.8858", lng = "-77.1054", zoom = 8) %>%
addPolygons(stroke=T,
opacity = 1,
fillOpacity = 0.9,
smoothFactor = 0.5,
color = "black",
fillColor = ~dmvPaletteReg(Cases),
weight = 0.5,
label = legendText,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "13px",
direction = "auto"
)) %>%
addLegend( pal=dmvPaletteReg, values=~Cases, opacity=0.9, title = paste("DMV Covid-19 Cases on", Sys.Date() - 1), position = "topright" )
dmvChloropleth <- leaflet(DMV_Cases) %>%
addTiles(attribution = attribution) %>%
setView(lat = "38.8858", lng = "-77.1054", zoom = 8) %>%
addPolygons(stroke=T,
opacity = 1,
fillOpacity = 0.9,
smoothFactor = 0.5,
color = "black",
fillColor = ~dmvPaletteReg(Cases),
weight = 0.5,
label = legendText,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "13px",
direction = "auto"
)) %>%
addLegend( pal=dmvPaletteReg, values=~Cases, opacity=0.9, title = paste("DMV Covid-19 Cases on", Sys.Date() - 1), position = "topright" )
setwd("/home/adrian/Documents/Personal_Portfolio_Site/DMV_Covid-19")
mapshot(dmvChloropleth, url = "dmvChloropleth.html")
legendTextPerCap <- paste0(
"County: ", DMV_Cases$NAME, "<br/>",
"State: ", DMV_Cases$State, "<br/>",
"Cases: ", round((DMV_Cases$Cases / DMV_Cases$TOTAL_POP_100K), 1), "<br/>"
) %>%
lapply(htmltools::HTML)
leaflet(DMV_Cases) %>%
addTiles(attribution = attribution) %>%
setView(lat = "38.8858", lng = "-77.1054", zoom = 8) %>%
addPolygons(stroke=T,
opacity = 1,
fillOpacity = 0.9,
smoothFactor = 0.5,
color = "black",
fillColor = ~dmvPalettePerCap((Cases / TOTAL_POP_100K)),
weight = 0.5,
label = legendTextPerCap,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "13px",
direction = "auto"
)) %>%
addLegend( pal=dmvPalettePerCap, values=~(Cases / TOTAL_POP_100K), opacity=0.9, title = htmltools::HTML(paste("DMV Covid-19 Case Rate <br> per 100k on", Sys.Date() - 1)), position = "topright" )
myBinsPerCap
round(seq(from = 0,
to = (max(DMV_Cases$Cases / DMV_Cases$TOTAL_POP_100K) + 2),
by = max(DMV_Cases$Cases / DMV_Cases$TOTAL_POP_100K) / 6), 0)
(max(DMV_Cases$Cases / DMV_Cases$TOTAL_POP_100K) + 2)
max(DMV_Cases$Cases / DMV_Cases$TOTAL_POP_100K)
max(DMV_Cases$Cases / DMV_Cases$TOTAL_POP_100K) / 6)
max(DMV_Cases$Cases / DMV_Cases$TOTAL_POP_100K) / 6
round(seq(from = 0,
to = (max(DMV_Cases$Cases / DMV_Cases$TOTAL_POP_100K) + 3),
by = max(DMV_Cases$Cases / DMV_Cases$TOTAL_POP_100K) / 6), 0)
max(DMV_Cases$Cases / DMV_Cases$TOTAL_POP_100K) + 3
max(DMV_Cases$Cases / DMV_Cases$TOTAL_POP_100K) + 3
max(DMV_Cases$Cases / DMV_Cases$TOTAL_POP_100K) / 6
max(DMV_Cases$Cases / DMV_Cases$TOTAL_POP_100K)
max(DMV_Cases$Cases / DMV_Cases$TOTAL_POP_100K) + 19
round(seq(from = 0,
to = (max(DMV_Cases$Cases / DMV_Cases$TOTAL_POP_100K) + 19),
by = max(DMV_Cases$Cases / DMV_Cases$TOTAL_POP_100K) / 6), 0)
myBinsPerCap <- round(seq(from = 0,
to = (max(DMV_Cases$Cases / DMV_Cases$TOTAL_POP_100K) + 19),
by = max(DMV_Cases$Cases / DMV_Cases$TOTAL_POP_100K) / 6), 0)
dmvPalettePerCap <- colorBin(palette = "YlOrRd", domain = DMV_Cases$Cases, na.color = "transparent", bins = myBinsPerCap)
leaflet(DMV_Cases) %>%
addTiles(attribution = attribution) %>%
setView(lat = "38.8858", lng = "-77.1054", zoom = 8) %>%
addPolygons(stroke=T,
opacity = 1,
fillOpacity = 0.9,
smoothFactor = 0.5,
color = "black",
fillColor = ~dmvPalettePerCap((Cases / TOTAL_POP_100K)),
weight = 0.5,
label = legendTextPerCap,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "13px",
direction = "auto"
)) %>%
addLegend( pal=dmvPalettePerCap, values=~(Cases / TOTAL_POP_100K), opacity=0.9, title = htmltools::HTML(paste("DMV Covid-19 Case Rate <br> per 100k on", Sys.Date() - 1)), position = "topright" )
dmvChloroplethPerCap <- leaflet(DMV_Cases) %>%
addTiles(attribution = attribution) %>%
setView(lat = "38.8858", lng = "-77.1054", zoom = 8) %>%
addPolygons(stroke=T,
opacity = 1,
fillOpacity = 0.9,
smoothFactor = 0.5,
color = "black",
fillColor = ~dmvPalettePerCap((Cases / TOTAL_POP_100K)),
weight = 0.5,
label = legendTextPerCap,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "13px",
direction = "auto"
)) %>%
addLegend( pal=dmvPalettePerCap, values=~(Cases / TOTAL_POP_100K), opacity=0.9, title = htmltools::HTML(paste("DMV Covid-19 Case Rate <br> per 100k on", Sys.Date() - 1)), position = "topright" )
mapshot(dmvChloroplethPerCap, url = "dmvChloroplethPerCap.html")
